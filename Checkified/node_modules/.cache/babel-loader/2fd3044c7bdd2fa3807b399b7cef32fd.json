{"remainingRequest":"/Users/jessekotsch/Desktop/e6885_finalproject/Checkified/node_modules/babel-loader/lib/index.js!/Users/jessekotsch/Desktop/e6885_finalproject/Checkified/node_modules/eslint-loader/index.js??ref--14-0!/Users/jessekotsch/Desktop/e6885_finalproject/Checkified/src/api/index.js","dependencies":[{"path":"/Users/jessekotsch/Desktop/e6885_finalproject/Checkified/src/api/index.js","mtime":1650998647833},{"path":"/Users/jessekotsch/Desktop/e6885_finalproject/Checkified/babel.config.js","mtime":1650998647861},{"path":"/Users/jessekotsch/Desktop/e6885_finalproject/Checkified/node_modules/cache-loader/dist/cjs.js","mtime":1650998633046},{"path":"/Users/jessekotsch/Desktop/e6885_finalproject/Checkified/node_modules/babel-loader/lib/index.js","mtime":1650998632617},{"path":"/Users/jessekotsch/Desktop/e6885_finalproject/Checkified/node_modules/eslint-loader/index.js","mtime":1650998637992}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9qZXNzZWtvdHNjaC9EZXNrdG9wL2U2ODg1X2ZpbmFscHJvamVjdC9DaGVja2lmaWVkL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmcuanMiOwppbXBvcnQgY29udHJhY3QgZnJvbSAnLi4vY29udHJhY3QnOwppbXBvcnQgc3RvcmUgZnJvbSAnLi4vc3RvcmUnOwppbXBvcnQgQmlnIGZyb20gJ2JpZ251bWJlci5qcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBnZXROYW1lOiBmdW5jdGlvbiBnZXROYW1lKCkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiBjb250cmFjdC5JbnN0YW5jZS5tZXRob2RzLm5hbWUoKS5jYWxsKCk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgX2NvbnRleHQuc2VudCk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfSwKICBnZXRTeW1ib2w6IGZ1bmN0aW9uIGdldFN5bWJvbCgpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gY29udHJhY3QuSW5zdGFuY2UubWV0aG9kcy5zeW1ib2woKS5jYWxsKCk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIF9jb250ZXh0Mi5zZW50KTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyKTsKICAgIH0pKSgpOwogIH0sCiAgYXBwcm92ZTogZnVuY3Rpb24gYXBwcm92ZShsaW1pdCkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgIHZhciBhcHByb3ZlQW1vdW50LCByZXNwb25zZTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBhcHByb3ZlQW1vdW50ID0gbmV3IEJpZyhsaW1pdCkudGltZXMoJzFlMTgnKS50b1N0cmluZygpOwogICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gY29udHJhY3QuSW5zdGFuY2UubWV0aG9kcy5hcHByb3ZlKGNvbnRyYWN0LmNvcmVBZGRyZXNzLCBhcHByb3ZlQW1vdW50KS5zZW5kVG9CbG9jayh7CiAgICAgICAgICAgICAgICBmcm9tOiBzdG9yZS5zdGF0ZS5kYXBwLmFjY291bnQsCiAgICAgICAgICAgICAgICBhbW91bnQ6IG5ldyBCaWcoJzAnKS50b1N0cmluZygpCiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDMuc2VudDsKCiAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLnN1Y2Nlc3MpIHsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCd0cmFuc2FjdGlvbiBzdWNjZXNzOiAnLCByZXNwb25zZSk7CiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCd0cmFuc2FjdGlvbiBmYWlsZWQ6ICcsIHJlc3BvbnNlKTsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuYWJydXB0KCJyZXR1cm4iLCByZXNwb25zZSk7CgogICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMyk7CiAgICB9KSkoKTsKICB9Cn07"},{"version":3,"sources":["/Users/jessekotsch/Desktop/e6885_finalproject/Checkified/src/api/index.js"],"names":["contract","store","Big","getName","Instance","methods","name","call","getSymbol","symbol","approve","limit","approveAmount","times","toString","coreAddress","sendToBlock","from","state","dapp","account","amount","response","success","console","log"],"mappings":";;;;;AAAA,OAAOA,QAAP,MAAqB,aAArB;AAEA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,OAAOC,GAAP,MAAgB,cAAhB;AAEA,eAAe;AACLC,EAAAA,OADK,qBACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACCH,QAAQ,CAACI,QAAT,CAAkBC,OAAlB,CAA0BC,IAA1B,GAAiCC,IAAjC,EADD;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEf,GAHU;AAILC,EAAAA,SAJK,uBAIO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACDR,QAAQ,CAACI,QAAT,CAAkBC,OAAlB,CAA0BI,MAA1B,GAAmCF,IAAnC,EADC;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEjB,GANU;AAOLG,EAAAA,OAPK,mBAOGC,KAPH,EAOU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACXC,cAAAA,aADW,GACK,IAAIV,GAAJ,CAAQS,KAAR,EAAeE,KAAf,CAAqB,MAArB,EAA6BC,QAA7B,EADL;AAAA;AAAA,qBAEMd,QAAQ,CAACI,QAAT,CAAkBC,OAAlB,CAA0BK,OAA1B,CAAkCV,QAAQ,CAACe,WAA3C,EAAwDH,aAAxD,EAAuEI,WAAvE,CAAmF;AACtGC,gBAAAA,IAAI,EAAEhB,KAAK,CAACiB,KAAN,CAAYC,IAAZ,CAAiBC,OAD+E;AAEtGC,gBAAAA,MAAM,EAAE,IAAInB,GAAJ,CAAQ,GAAR,EAAaY,QAAb;AAF8F,eAAnF,CAFN;;AAAA;AAEXQ,cAAAA,QAFW;;AAOjB,kBAAIA,QAAQ,CAACC,OAAb,EAAsB;AAClBC,gBAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCH,QAArC;AACH,eAFD,MAEO;AACHE,gBAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCH,QAApC;AACH;;AAXgB,gDAaVA,QAbU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcpB;AArBU,CAAf","sourcesContent":["import contract from '../contract';\n\nimport store from '../store'\n\nimport Big from 'bignumber.js'\n\nexport default {\n    async getName() {\n        return await contract.Instance.methods.name().call();\n    },\n    async getSymbol() {\n        return await contract.Instance.methods.symbol().call();\n    },\n    async approve(limit) {\n        const approveAmount = new Big(limit).times('1e18').toString();\n        const response = await contract.Instance.methods.approve(contract.coreAddress, approveAmount).sendToBlock({\n            from: store.state.dapp.account,\n            amount: new Big('0').toString()\n        });\n\n        if (response.success) {\n            console.log('transaction success: ', response);\n        } else {\n            console.log('transaction failed: ', response);\n        }\n\n        return response;\n    }\n}"]}]}